/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ams.features;
//import javax.swing.JOptionPane;

import com.mycompany.ams.features.data_struct.MyLinkedList;
import com.mycompany.ams.features.data_struct.Node;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ezekiel Billona
 */
public class EditingForm extends javax.swing.JFrame {
    String selectedTenantIdNo;
    MyLinkedList linkedList = new MyLinkedList();
    /**
     * Creates new form EditingForm
     * @param idNo
     */
    public EditingForm() {
        initComponents();
    }
    
    public EditingForm(String idNo) { // constructor that accepts an argument
        initComponents();
        this.selectedTenantIdNo = idNo;
        initFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackgroundP = new javax.swing.JPanel();
        layer2bg = new javax.swing.JPanel();
        fname = new javax.swing.JLabel();
        clientFullName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        clientContact = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        clientEmail = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        clientBalance = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clientDeposit = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        clientFloor = new javax.swing.JLabel();
        clientRoom = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        field = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        newInput = new javax.swing.JTextField();
        logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackgroundP.setBackground(new java.awt.Color(208, 49, 49));

        layer2bg.setBackground(new java.awt.Color(255, 255, 255));

        fname.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        fname.setText("FULLNAME");

        clientFullName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientFullName.setText(" ");
        clientFullName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("CONTACT NO");

        clientContact.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientContact.setText(" ");
        clientContact.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("EMAIL");

        clientEmail.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientEmail.setText(" ");
        clientEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel1.setText("BALANCE DUE");

        clientBalance.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientBalance.setText(" ");
        clientBalance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("SECURITY DEPOSIT");

        clientDeposit.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientDeposit.setText(" ");
        clientDeposit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setText("UNIT NO");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setText("FLOOR NO");

        clientFloor.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientFloor.setText(" ");
        clientFloor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        clientRoom.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        clientRoom.setText(" ");
        clientRoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel10.setText("FIELD");

        field.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        field.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FULLNAME", "CONTACT NO", "EMAIL", "BALANCE DUE", "SECURITY DEPOSIT", "ROOM NO", "FLOOR NO" }));
        field.setSelectedItem(null);
        field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldActionPerformed(evt);
            }
        });
        field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(208, 49, 49));
        jButton1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(244, 245, 244));
        jButton1.setText("SAVE");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(208, 49, 49));
        jButton2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(244, 245, 244));
        jButton2.setText("DELETE");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(208, 49, 49));
        jButton3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(244, 245, 244));
        jButton3.setText("CANCEL");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 153));
        jLabel11.setText("EDITING INFORMATION");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel12.setText("NEW VALUE");

        newInput.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        newInput.setText(" ");
        newInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newInputActionPerformed(evt);
            }
        });
        newInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newInputKeyReleased(evt);
            }
        });

        logo.setText(" ");

        javax.swing.GroupLayout layer2bgLayout = new javax.swing.GroupLayout(layer2bg);
        layer2bg.setLayout(layer2bgLayout);
        layer2bgLayout.setHorizontalGroup(
            layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layer2bgLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layer2bgLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(71, 71, 71)
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layer2bgLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(newInput, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layer2bgLayout.createSequentialGroup()
                                    .addComponent(logo)
                                    .addGap(19, 19, 19))
                                .addGroup(layer2bgLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(76, 76, 76)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(field, 0, 149, Short.MAX_VALUE)))
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(layer2bgLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clientDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clientRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clientFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(layer2bgLayout.createSequentialGroup()
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layer2bgLayout.createSequentialGroup()
                                .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fname)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addGroup(layer2bgLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(clientFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                                .addComponent(clientContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(clientEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(clientBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layer2bgLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        layer2bgLayout.setVerticalGroup(
            layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layer2bgLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logo)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fname)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10)
                    .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layer2bgLayout.createSequentialGroup()
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(clientDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientFullName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clientRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clientFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(layer2bgLayout.createSequentialGroup()
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layer2bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))))
        );

        javax.swing.GroupLayout BackgroundPLayout = new javax.swing.GroupLayout(BackgroundP);
        BackgroundP.setLayout(BackgroundPLayout);
        BackgroundPLayout.setHorizontalGroup(
            BackgroundPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(layer2bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundPLayout.setVerticalGroup(
            BackgroundPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundPLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(layer2bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BackgroundP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

  
    
    private void initFields() {
        
        BufferedReader reader;
        try {
            reader = new BufferedReader(new FileReader("TenantsDB.txt"));
            String line;
            int ctr = 0;
            while((line = reader.readLine()) != null) {
                String[] data = line.split("/");
                
                linkedList.add(data[0], data[1], data[2], data[3], Integer.parseInt(data[4]), Integer.parseInt(data[5]), Integer.parseInt(data[6]), Integer.parseInt(data[7]));    
            }
            reader.close();
        }catch(IOException e) {
            e.printStackTrace();
        }
        
        Node currentNode = linkedList.head;
        
        while((currentNode != null) && !(currentNode.getIdNo().equals(selectedTenantIdNo))) {
            currentNode = currentNode.next;
        }
        
        clientFullName.setText(currentNode.getFullname());
        clientContact.setText(currentNode.getContactNo());
        clientEmail.setText(currentNode.getEmail());
        clientBalance.setText(String.valueOf(currentNode.getBalance()));
        clientDeposit.setText(String.valueOf(currentNode.getSecurityDeposit()));
        clientRoom.setText(String.valueOf(currentNode.getUnitNo()));
        clientFloor.setText(String.valueOf(currentNode.getFloorNo()));
        
    }
    
    private void saveEditedData() {
        Node currentNode = linkedList.head;

        
        while((currentNode != null) && !(currentNode.getIdNo().equals(selectedTenantIdNo))){
            currentNode = currentNode.next;
        }
        
        currentNode.setFullname(clientFullName.getText());
        currentNode.setContactNo(clientContact.getText());
        currentNode.setEmail(clientEmail.getText());
        currentNode.setBalance(Integer.parseInt(clientBalance.getText()));
        currentNode.setSecurityDeposit(Integer.parseInt(clientDeposit.getText()));
        currentNode.setFloorNo(Integer.parseInt(clientFloor.getText()));
        currentNode.setUnitNo(Integer.parseInt(clientRoom.getText()));      
        saveToDB();
    }
    
    private void deleteData() {
        Node p ,q;
        p = q = linkedList.head;
        
        if(p.getIdNo().equals(selectedTenantIdNo)) {
            linkedList.head = linkedList.head.next;
            return;
        }
        
        while(p != null && !(p.getIdNo().equals(selectedTenantIdNo))) {
            q = p;
            p = p.next;
        }
        
        q.next = p.next;
        
    }
    
    private void saveToDB(){
        Node currentNode = linkedList.head;
        
        BufferedWriter writer;
        try {
            writer = new BufferedWriter(new FileWriter("TenantsDB.txt"));
            while(currentNode != null) {
                writer.write(currentNode.getIdNo() + "/" + currentNode.getFullname() + "/" + currentNode.getContactNo() + "/" + currentNode.getEmail() + "/" + currentNode.getBalance() + "/" + currentNode.getSecurityDeposit() + "/" + currentNode.getFloorNo() + "/" + currentNode.getUnitNo() + "\n");
                currentNode = currentNode.next;
            }
            writer.close();
        } catch (IOException e) {
            Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        deleteData();
        saveToDB();
        int okBtn = JOptionPane.showOptionDialog(null, "Tenant was successfully deleted!", "Confirmation", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[]{"OK"}, "OK");
        if(okBtn == JOptionPane.OK_OPTION) {
            TenantsList tnantsList = new TenantsList();
            tnantsList.show();
            dispose();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void newInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newInputActionPerformed
        // TODO add your handling code here:
        //newInput.setText(null);
    }//GEN-LAST:event_newInputActionPerformed

    private void fieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldKeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_fieldKeyReleased

    private void newInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newInputKeyReleased
        // TODO add your handling code here:
        String newText = newInput.getText();
        
        if(field.getSelectedItem().equals("FULLNAME")){
            clientFullName.setText(newText);
        }else if(field.getSelectedItem().equals("CONTACT NO")){
            clientContact.setText(newText);
        }else if(field.getSelectedItem().equals("EMAIL")){
            clientEmail.setText(newText);
        }else if(field.getSelectedItem().equals("BALANCE DUE")){
            clientBalance.setText(newText);
        }else if(field.getSelectedItem().equals("SECURITY DEPOSIT")){
            clientDeposit.setText(newText);
        }else if(field.getSelectedItem().equals("ROOM NO")){
            clientRoom.setText(newText);
        }else{
            clientFloor.setText(newText);
        }
                
    }//GEN-LAST:event_newInputKeyReleased

    private void fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldActionPerformed
        // TODO add your handling code here:
        newInput.setText(null);
    }//GEN-LAST:event_fieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        saveEditedData();
        
        int okBtn = JOptionPane.showOptionDialog(null, "Edit successful! Changes are saved.", "Confirmation", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new Object[]{"OK"}, "OK");
        if(okBtn == JOptionPane.OK_OPTION) {
            TenantsList tnantsList = new TenantsList();
            tnantsList.show();
            dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        TenantsList tnantsList = new TenantsList();
        tnantsList.show();
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackgroundP;
    private javax.swing.JLabel clientBalance;
    private javax.swing.JLabel clientContact;
    private javax.swing.JLabel clientDeposit;
    private javax.swing.JLabel clientEmail;
    private javax.swing.JLabel clientFloor;
    private javax.swing.JLabel clientFullName;
    private javax.swing.JLabel clientRoom;
    private javax.swing.JComboBox<String> field;
    private javax.swing.JLabel fname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel layer2bg;
    private javax.swing.JLabel logo;
    private javax.swing.JTextField newInput;
    // End of variables declaration//GEN-END:variables
}
